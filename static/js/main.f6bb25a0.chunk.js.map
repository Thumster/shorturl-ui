{"version":3,"sources":["ShorturlApi.js","logo.png","copy.svg","App.js","reportWebVitals.js","index.js"],"names":["methods","ShorturlApi","createShorturl","url","reqBody","axios","post","headers","Response","response","message","type","link","Alert","className","variant","onClick","navigator","clipboard","writeText","src","copyIcon","alt","App","promiseInProgress","usePromiseTracker","alertTypes","isUrlOptions","protocols","require_tld","require_protocol","require_host","require_port","require_valid_protocol","allow_underscores","host_whitelist","host_blacklist","allow_trailing_dot","allow_protocol_relative_urls","disallow_auth","validate_length","useState","isUrlValid","setIsUrlValid","isUrlInvalid","setIsUrlInvalid","setResponse","urlValidator","validator","isURL","logo","Form","onSubmit","event","preventDefault","form","currentTarget","target","value","isFormValid","checkValidity","trackPromise","ShortUrlApi","then","resp","data","shortUrl","catch","err","errMsg","stopPropagation","noValidate","Label","Control","onChange","checkValid","isValid","isInvalid","placeholder","required","Feedback","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6bb25a0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api_url = \"http://shorturl.sytes.net\";\r\n\r\nconst methods = {\r\n    create: \"/create\",\r\n};\r\n\r\nconst ShorturlApi = {\r\n    createShorturl: (url) => {\r\n        const reqBody = {\r\n            'url': url,\r\n        };\r\n        return axios.post(\r\n            api_url + methods.create, reqBody, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default ShorturlApi;","export default __webpack_public_path__ + \"static/media/logo.a441df0c.png\";","export default __webpack_public_path__ + \"static/media/copy.9f9b3700.svg\";","import { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\nimport ShortUrlApi from './ShorturlApi';\r\nimport validator from 'validator';\r\nimport logo from './logo.png';\r\nimport copyIcon from './copy.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const alertTypes = {\r\n    'success': 'success',\r\n    'error': 'danger',\r\n  };\r\n\r\n  const isUrlOptions = {\r\n    protocols: ['http', 'https', 'ftp'],\r\n    require_tld: true,\r\n    require_protocol: true,\r\n    require_host: true,\r\n    require_port: false,\r\n    require_valid_protocol: true,\r\n    allow_underscores: false,\r\n    host_whitelist: false,\r\n    host_blacklist: false,\r\n    allow_trailing_dot: false,\r\n    allow_protocol_relative_urls: false,\r\n    disallow_auth: false,\r\n    validate_length: true\r\n  };\r\n\r\n  const [isUrlValid, setIsUrlValid] = useState(false);\r\n  const [isUrlInvalid, setIsUrlInvalid] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const handleOnChange = (event) => {\r\n    event.preventDefault();\r\n    const checkValid = urlValidator(event.target.value);\r\n\r\n    setIsUrlValid(checkValid);\r\n    setIsUrlInvalid(!checkValid);\r\n  }\r\n\r\n  const urlValidator = (url) => {\r\n    const checkValidUrl = validator.isURL(url, isUrlOptions);\r\n    if (checkValidUrl) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setResponse(null);\r\n\r\n    const form = event.currentTarget;\r\n    const url = event.target[0]?.value;\r\n    const isFormValid = form.checkValidity() && urlValidator(url);\r\n\r\n    if (!isFormValid) {\r\n      event.stopPropagation();\r\n      setIsUrlInvalid(true);\r\n      setIsUrlValid(false);\r\n    } else {\r\n      if (isFormValid) {\r\n        trackPromise(\r\n          ShortUrlApi.createShorturl(url)\r\n            .then(resp => {\r\n              setResponse({\r\n                message: 'Successfully created Shorturl!',\r\n                link: resp.data.shortUrl,\r\n                type: alertTypes.success,\r\n              });\r\n              setIsUrlInvalid(false);\r\n              setIsUrlValid(false);\r\n            })\r\n            .catch(err => {\r\n              let errMsg;\r\n              if (!err.response) {\r\n                errMsg = 'Failed to connect to server!'\r\n              } else {\r\n                errMsg = 'Unsuccessful! \\n' + err.response?.data?.message;\r\n              }\r\n              setResponse({\r\n                message: errMsg,\r\n                type: alertTypes.error,\r\n              });\r\n            })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"user-form-container\">\r\n          <h3>Shorturl</h3>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <Form className=\"user-form\" onSubmit={handleSubmit} noValidate>\r\n            <Form.Label>Enter the URL to shorten</Form.Label>\r\n            <Form.Control\r\n              onChange={handleOnChange}\r\n              isValid={isUrlValid}\r\n              isInvalid={isUrlInvalid}\r\n              placeholder=\"https://example.com\"\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid URL\r\n            </Form.Control.Feedback>\r\n            {response?.type && <Response response={response} />}\r\n            {promiseInProgress && <div><img src={logo} className=\"spinner-logo\" alt=\"logo\" /></div>}\r\n            <Button className=\"button-submit\" type=\"submit\">Generate Shorturl</Button>\r\n          </Form>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Response = ({ response }) => {\r\n  const { message, type, link } = response;\r\n  const handleOnClick = () => {\r\n    if (link) {\r\n      navigator.clipboard.writeText(link);\r\n    }\r\n  }\r\n\r\n  return <Alert className=\"response\" variant={type} onClick={handleOnClick}>\r\n    <div className=\"response-body\">\r\n      <div className=\"text-container\">\r\n        {message}\r\n        {link && <><br />{link}</>}\r\n      </div>\r\n      <div className=\"copy-icon-container\">\r\n        <img className=\"copy-icon\" src={copyIcon} alt=\"copy\" />\r\n      </div>\r\n    </div>\r\n  </Alert>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}